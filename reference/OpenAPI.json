{
  "openapi": "3.1.0",
  "info": {
    "title": "Voucherify API",
    "version": "2018-08-01",
    "description": "Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.",
    "contact": {
      "name": "Voucherify Team",
      "url": "https://www.voucherify.io/contact-support",
      "email": "support@voucherify.io"
    },
    "termsOfService": "https://www.voucherify.io/legal/subscription-agreement",
    "license": {
      "name": "MIT",
      "url": "https://github.com/voucherifyio/voucherify-js-sdk/blob/main/LICENSE"
    },
    "summary": "Voucherify is an API-first promotion engine "
  },
  "servers": [
    {
      "url": "https://api.voucherify.io",
      "description": "EU"
    },
    {
      "url": "https://us1.api.voucherify.io",
      "description": "US"
    },
    {
      "description": "AS",
      "url": "https://as1.api.voucherify.io"
    },
    {
      "url": "https://api.voucherify.io/client",
      "description": "Client EU"
    },
    {
      "url": "https://us1.api.voucherify.io/client",
      "description": "Client US"
    },
    {
      "url": "https://as1.api.voucherify.io/client",
      "description": "Client AS"
    },
    {
      "url": "https://api.voucherify.io/v1",
      "description": "Sandbox"
    },
    {
      "url": "https://dev.api.voucherify.io/v1",
      "description": "Development environment"
    }
  ],
  "components": {
    "securitySchemes": {},
    "parameters": {
      "code": {
        "name": "code",
        "in": "path",
        "schema": {
          "type": "string",
          "example": "7fjWdr"
        },
        "description": "A **code** that identifies the voucher.",
        "required": true
      },
      "X-App-Id": {
        "name": "X-App-Id",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application ID"
      },
      "X-App-Token": {
        "name": "X-App-Token",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application Secret Key"
      },
      "X-Client-Token": {
        "name": "X-Client-Token",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application Secret Key"
      },
      "X-Client-Application-Id": {
        "name": "X-Client-Application-Id",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Application ID"
      },
      "session_key": {
        "name": "session_key",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "ssn_yQGMTeKBSw8OOuFPwlBEjzGy8d8VA9Ts"
        },
        "description": "A unique session identifier."
      },
      "force": {
        "name": "force",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "description": "If this flag is set to `true`, the voucher will be removed permanently. It means that afterwards, the user will be able to create the next voucher with the same code."
      },
      "file": {
        "name": "file",
        "in": "header",
        "required": true,
        "schema": {
          "example": "file=@/path/to/vouchers.csv"
        },
        "description": "Path to CSV file."
      },
      "audienceRulesOnly": {
        "name": "audienceRulesOnly",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "description": "This parameter set to true will ask only for verifying vouchers' validation rules only against conditions applied to audiences' attributes (belonging into segment and metadata)"
      },
      "order": {
        "name": "order",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created_at",
            "-created_at",
            "updated_at",
            "-updated_at"
          ]
        },
        "description": "Sorts the results"
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "maximum": 50
        },
        "description": "The number of vouchers to be qualified."
      },
      "campaignId": {
        "name": "campaignId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3"
        },
        "description": "Assigned by the Voucherify API, identifies the campaign."
      }
    },
    "schemas": {
      "1_obj_voucher_object": {
        "title": "VoucherObject",
        "type": "object",
        "description": "This is an object representing a voucher.",
        "examples": [],
        "x-tags": [
          "VOUCHERIFY API"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "v_mkZN9v7vjYUadXnHrMza8W5c34fE5KiV",
            "description": "Assigned by the Voucherify API, identifies the voucher."
          },
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters."
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign.",
            "default": null
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "default": null
          },
          "category": {
            "type": "string",
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of voucher. "
          },
          "discount": {
            "default": null,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping"
              }
            ],
            "description": "Object representing discount parameters. Child attributes are present only if `type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\n A Free Shipping discount is a special instance of the  `UNIT` type discount."
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Object representing gift parameters. Child attributes are present only if `type` is `GIFT_VOUCHER`. Defaults to `null`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "balance": {
                "type": "integer",
                "example": 500,
                "description": "Available funds. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Object representing loyalty card parameters. Child attributes are present only if `type` is `LOYALTY_CARD`. Defaults to `null`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              },
              "balance": {
                "type": "integer",
                "example": 6970,
                "description": "Points available for reward redemption."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "assets": {
            "type": "object",
            "description": "Stores links to images of QR and barcode that correspond to an encrypted voucher code.",
            "properties": {
              "qr": {
                "type": "object",
                "description": "Stores Quick Response (QR) representation of encrypted code.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK+t4pp7U7oFzjGJzj9q/bmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg+BaZk5QwXMf8k/OzSlOEVybpwSq+AiqPoNtjeuqtIgkDyvT6Q==",
                    "description": "Encrypted voucher code id"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19ucFhvVmBVpVYG5KoswTsjSIaqoKg5L9ie4BK%2Bt4pp7U7oFzjGJzj9q%2FbmuMOj9mEFiVKDMIkSaruKedMvHbKoPX5Sg%2BBaZk5QwXMf8k%2FOzSlOEVybpwSq%2BAiqPoNtjeuqtIgkDyvT6Q%3D%3D",
                    "description": "URL to QR code  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`"
                  }
                }
              },
              "barcode": {
                "type": "object",
                "description": "Stores barcode representation of encrypted code.",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "U2FsdGVkX19eJhGfWwUrH9+tulBkON+AnMktic+N6CVWzZ9+fHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ+kJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6/pFs61apEn9SJx32ttCF6d3oxKISQQ==",
                    "description": "Encrypted voucher code id"
                  },
                  "url": {
                    "type": "string",
                    "example": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19eJhGfWwUrH9%2BtulBkON%2BAnMktic%2BN6CVWzZ9%2BfHVxuVx22WakrzxiWXy0skuvvEHSeZIw9HlgyIJ%2BkJ1iPdUKpyENuNYJKzoZlO0mmTf6WQM6%2FpFs61apEn9SJx32ttCF6d3oxKISQQ%3D%3D",
                    "description": "URL to barcode  \n\n*Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.  \n\n- `size`: integer value from `1` to `100`  \n- `format`: string, either `png` (default) or `svg`"
                  }
                }
              }
            }
          },
          "is_referral_code": {
            "type": "boolean",
            "description": "Flag indicating whether this voucher is a referral code."
          },
          "created_at": {
            "type": "string",
            "example": "2021-12-22T10:13:06.487Z",
            "description": "Timestamp representing the date and time when the voucher was created in ISO 8601 format.",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-12-22T10:14:45.316Z",
            "format": "date-time",
            "description": "Timestamp representing the date and time when the voucher was last updated in ISO 8601 format."
          },
          "validation_rules_assignments": {
            "type": "object",
            "description": "Stores information about validation rules assigned to the voucher.",
            "properties": {
              "object": {
                "type": "string",
                "description": "The type of object represented is by default `list`.",
                "default": "list"
              },
              "data_ref": {
                "type": "string",
                "description": "Identifies the name of the attribute that contains the array of validation rule assignments.",
                "default": "data"
              },
              "data": {
                "type": "array",
                "description": "Array of validation rule objects. Each validation rule object contains details about the rule.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "asgm_N7t39epaQR2SkQcW",
                      "description": "Assigned by the Voucherify API, identifies the validation rule assignment."
                    },
                    "rule_id": {
                      "type": "string",
                      "example": "val_ssbxf1L9aKri",
                      "description": "Assigned by the Voucherify API, identifies the validation rule."
                    },
                    "related_object_id": {
                      "type": "string",
                      "example": "camp_AaP9MC1Y0GpBII84UTIuasvb",
                      "description": "Id of the object from which the rule originates, can be the id of the `voucher` itself or its parent `campaign`."
                    },
                    "related_object_type": {
                      "type": "string",
                      "example": "campaign",
                      "description": "Which object does the rule originate from: the  `voucher` itself or inherited from its parent `campaign`."
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2022-02-14T15:12:06.817Z",
                      "description": "Timestamp representing the date and time when the validation rule was created in ISO 8601 format."
                    },
                    "object": {
                      "type": "string",
                      "default": "validation_rules_assignment",
                      "description": "The type of object represented is by default `validation_rules_assignment`"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "description": "Total number of validation rules assigned to the voucher."
              }
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "default": null,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              },
              "redeemed_quantity": {
                "type": "integer",
                "example": 1,
                "description": "How many times a voucher has already been redeemed."
              },
              "redeemed_amount": {
                "type": "integer",
                "example": 100000,
                "description": "Total Amount redeemed by the voucher. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 balance is written as 10000."
              },
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the url attribute."
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/redemptions?page=1&limit=10",
                "description": "The endpoint where this list of redemptions can be accessed using a GET method. `/v1/vouchers/{voucher_code}/redemptions`"
              }
            }
          },
          "publish": {
            "type": "object",
            "description": "This object stores a summary of publish events: an events counter and an endpoint which can be called to return details of each event.  A publication is required for loyalty cards and referral codes. This object gets updated whenever a voucher has been published. Publication means assigning a code to a particular customer. Typically, a publication is made by distributing your codes to your customers, e.g. through Export to MailChimp or publish voucher API method. \n\n<!-- title: My Table Title -->\n\n| Required | Optional |\n| -------- | :------: |\n| `type`:`LOYALTY_CARD` |  `type`:`DISCOUNT_VOUCHER`   | \n| `is_referral_code`:`true`      |    `type`:`GIFT_VOUCHER`   |\n",
            "properties": {
              "object": {
                "type": "string",
                "default": "list",
                "description": "The type of object represented is by default `list`. To get this list, you need to make a call to the endpoint returned in the `url` attribute."
              },
              "count": {
                "type": "integer",
                "example": 0,
                "description": "Publication events counter."
              },
              "url": {
                "type": "string",
                "example": "/v1/vouchers/WVPblOYX/publications?page=1&limit=10",
                "description": "The endpoint where this list of publications can be accessed using a GET method. `/v1/vouchers/{voucher_code}/publications`"
              }
            }
          },
          "object": {
            "type": "string",
            "description": "The type of object represented by JSON. Default is `voucher`.",
            "default": "voucher"
          }
        }
      },
      "1_req_vouchers__POST": {
        "title": "req_vouchers__POST",
        "type": "object",
        "description": "Request body schema for creating a voucher.",
        "examples": [
          {
            "category": "New Customers",
            "code": "WELCOME-COUPON",
            "type": "DISCOUNT_VOUCHER",
            "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
            "discount": {
              "percent_off": 10,
              "type": "PERCENT",
              "effect": "APPLY_TO_ORDER"
            },
            "start_date": "2016-01-01T00:00:00Z",
            "expiration_date": "2022-12-31T23:59:59Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P2D"
            },
            "validity_day_of_week": [
              1,
              2,
              3,
              4,
              5
            ],
            "active": false,
            "additional_info": "This voucher will remain inactive until enabled.",
            "redemption": {
              "quantity": 10
            },
            "metadata": {
              "test": true,
              "locale": "de-en"
            },
            "validation_rules": [
              "val_4j7DCRm2IS59"
            ]
          }
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "WVPblOYX",
            "description": "A code that identifies a voucher. Pattern can use all letters of the English alphabet, Arabic numerals, and special characters. Pass this attribute in the request body if you want to deliberately create a distinct code. Otherwise, use the `code_config` object to design rules that the Voucherify API should use to create a random code."
          },
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign. **Required** for `LOYALTY_CARD` type.",
            "default": null
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "default": null
          },
          "category": {
            "type": "string",
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of voucher. "
          },
          "discount": {
            "default": null,
            "description": "Defines discount voucher; **required** when`type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\nA Free Shipping discount is a special instance of the  `UNIT` type discount.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping_POST"
              }
            ]
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Defines gift card; **required** when type parameter is `GIFT_VOUCHER`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total gift card income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Defines loyalty card; **required** when type parameter is `LOYALTY_CARD`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is active. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "validation_rules": {
            "type": "array",
            "description": "Array containing the id of the validation rule associated with the voucher.",
            "items": {
              "type": "string",
              "example": "[val_4j7DCRm2IS59]"
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "default": null,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            }
          },
          "code_config": {
            "type": "object",
            "description": "Defines code's pattern (prefix, suffix, length, charset, etc). Pass this attribute in the request body if you want to design rules that the Voucherify API should use to create a random code. Otherwise, use the `code` object to define a distinct code.",
            "properties": {
              "length": {
                "type": "string",
                "description": "Number of characters in a generated code (excluding prefix and postfix)."
              },
              "charset": {
                "type": "string",
                "description": "Characters that can appear in the code.  \n\nExamples:\n\n- Alphanumeric: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Alphabetic: `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Alphabetic Lowercase: `abcdefghijklmnopqrstuvwxyz` \n- Alphabetic Uppercase: `ABCDEFGHIJKLMNOPQRSTUVWXYZ` \n- Numbers: `0123456789`  \n- Custom: a custom character set"
              },
              "prefix": {
                "type": "string",
                "description": "A text appended before the code."
              },
              "postfix": {
                "type": "string",
                "description": "A text appended after the code."
              },
              "pattern": {
                "type": "string",
                "description": "A pattern for codes where hashes (#) will be replaced with random characters. Overrides `length`."
              }
            }
          }
        }
      },
      "1_req_vouchers_code_POST": {
        "title": "req_vouchers_code_POST",
        "type": "object",
        "description": "Request body schema for creating a voucher.",
        "examples": [],
        "properties": {
          "campaign": {
            "type": "string",
            "example": "Gift Card Campaign",
            "description": "A unique campaign name, identifies the voucher's parent campaign. **Required** for `LOYALTY_CARD` type.",
            "default": null
          },
          "campaign_id": {
            "type": "string",
            "example": "camp_FNYR4jhqZBM9xTptxDGgeNBV",
            "description": "Assigned by the Voucherify API, identifies the voucher's parent campaign.",
            "default": null
          },
          "category": {
            "type": "string",
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "type": {
            "type": "string",
            "enum": [
              "GIFT_VOUCHER",
              "DISCOUNT_VOUCHER",
              "LOYALTY_CARD"
            ],
            "description": "Defines the type of voucher. "
          },
          "discount": {
            "default": null,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple_POST"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping_POST"
              }
            ],
            "description": "Defines discount voucher; **required** when`type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\nA Free Shipping discount is a special instance of the  `UNIT` type discount."
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Defines gift card; **required** when type parameter is `GIFT_VOUCHER`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total voucher income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Defines loyalty card; **required** when type parameter is `LOYALTY_CARD`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is active. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          },
          "validation_rules": {
            "type": "array",
            "description": "Array containing the id of the validation rule associated with the voucher.",
            "items": {
              "type": "string",
              "example": "[val_4j7DCRm2IS59]"
            }
          },
          "redemption": {
            "type": "object",
            "description": "Stores a summary of redemptions that have been applied to the voucher.",
            "properties": {
              "quantity": {
                "type": "integer",
                "default": null,
                "description": "How many times a voucher can be redeemed. A `null` value means unlimited."
              }
            }
          }
        }
      },
      "1_req_vouchers_code_PUT": {
        "title": "req_vouchers_code_PUT",
        "type": "object",
        "description": "Request body schema for updating a voucher.",
        "examples": [],
        "properties": {
          "category": {
            "type": "string",
            "default": null,
            "description": "Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint."
          },
          "discount": {
            "default": null,
            "oneOf": [
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_amount_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_percentage_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_fixed_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_one_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_unit_multiple_PUT"
              },
              {
                "$ref": "#/components/schemas/1_obj_voucher_object_discount_shipping_PUT"
              }
            ],
            "description": "Defines discount voucher; **required** when`type` is `DISCOUNT_VOUCHER`. Defaults to `null`. Type of discount:\n- `AMOUNT`\n- `PERCENT`\n- `UNIT`\n- `FIXED`\n\nA Free Shipping discount is a special instance of the  `UNIT` type discount."
          },
          "gift": {
            "default": null,
            "type": "object",
            "description": "Defines gift card; **required** when type parameter is `GIFT_VOUCHER`.",
            "properties": {
              "amount": {
                "type": "integer",
                "example": 10000,
                "description": "Total voucher income. Value is multiplied by 100 to precisely represent 2 decimal places. For example, $100 amount is written as 10000."
              },
              "effect": {
                "type": "string",
                "enum": [
                  "APPLY_TO_ORDER",
                  "APPLY_TO_ITEMS"
                ],
                "description": "Defines how the credits are applied to the customer's order"
              }
            }
          },
          "loyalty_card": {
            "default": null,
            "type": "object",
            "description": "Defines loyalty card; **required** when type parameter is `LOYALTY_CARD`.",
            "properties": {
              "points": {
                "type": "integer",
                "example": 7000,
                "description": "Total points incurred over lifespan of loyalty card."
              }
            }
          },
          "start_date": {
            "type": "string",
            "example": "2021-12-01T00:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp in ISO 8601 format. Voucher is *inactive before* this date."
          },
          "expiration_date": {
            "type": "string",
            "example": "2021-12-31T00:00:00.000Z",
            "format": "date-time",
            "description": "Expiration timestamp in ISO 8601 format.  Voucher is *inactive after* this date."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the voucher is active. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "default": null,
            "properties": {
              "duration": {
                "type": "string",
                "example": "PT1H",
                "description": "Defines the amount of time the voucher will be active in ISO 8601 format. For example, a voucher with a `duration` of `PT1H` will be valid for a duration of one hour."
              },
              "interval": {
                "type": "string",
                "example": "P2D",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, a voucher with an `interval` of `P2D` will be active every other day."
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "default": null,
            "enum": [
              [
                0
              ],
              [
                1
              ],
              [
                2
              ],
              [
                3
              ],
              [
                4
              ],
              [
                5
              ],
              [
                6
              ]
            ],
            "description": "Integer array corresponding to the particular days of the week in which the voucher is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* voucher\n- `false` indicates an *inactive* voucher"
          },
          "additional_info": {
            "type": "string",
            "default": null,
            "description": "An optional field to keep any extra textual information about the code such as a code description and details."
          },
          "metadata": {
            "type": "object",
            "description": "A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format."
          }
        }
      },
      "obj_earning_rule_object": {
        "description": "This is an object representing an earning rule.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ern_P6MWOFGsv63sbTaTZBp0IHGK",
            "created_at": "2022-02-02T13:18:32.557Z",
            "updated_at": "2022-02-03T13:09:27.206Z",
            "validation_rule_id": "val_6o0qdvlbh1mt",
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "event": "order.paid",
            "source": {
              "banner": "Order paid 1000 points",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "object": "earning_rule",
            "automation_id": "auto_RVgObANuPToNla8LuD5aT3Zb"
          }
        },
        "title": "EarningRuleObject",
        "properties": {
          "id": {
            "type": "string",
            "example": "ern_P6MWOFGsv63sbTaTZBp0IHGK",
            "description": "Assigned by the Voucherify API, identifies the earning rule object."
          },
          "created_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the earning rule was created in ISO 8601 format.",
            "example": "2022-02-02T13:18:32.557Z",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "Timestamp representing the date and time when the earning rule was last updated in ISO 8601 format.",
            "example": "2022-02-03T13:09:27.206Z",
            "format": "date-time",
            "default": null
          },
          "validation_rule_id": {
            "type": "string",
            "example": "val_248vs7tUjlIE",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "default": null
          },
          "loyalty": {
            "description": "An object that defines the number of points that will be added to a loyalty card and how the points will be added.\n\n- `FIXED` adds a fixed number of `points`\n- `PROPORTIONAL` adds points proportionally based on a pre-defined ratio",
            "oneOf": [
              {
                "description": "Fixed. Applicable to events `order.paid`,  `customer.segment.entered`, and `custom_event`.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points to be added to the loyalty card.",
                    "example": 1000
                  },
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card. `FIXED` adds a fixed number of `points`.",
                    "default": "FIXED"
                  }
                }
              },
              {
                "description": "Proportional. Applicable to only `order.paid`.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card.`PROPORTIONAL` adds points based on a pre-defined ratio",
                    "default": "PROPORTIONAL"
                  },
                  "order": {
                    "type": "object",
                    "description": "Defines proportion for calculating how many points to add to a loyalty card. The ratio is based on the order amount. For `every` dollar spent, the customer will get this many `points`.  \n",
                    "properties": {
                      "amount": {
                        "type": "object",
                        "description": "Defines the ratio based on the order amount.",
                        "properties": {
                          "every": {
                            "type": "integer",
                            "description": "Order amount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                          },
                          "points": {
                            "type": "integer",
                            "description": "Number of points awarded."
                          }
                        }
                      }
                    }
                  }
                }
              }
            ],
            "type": "object"
          },
          "custom_event": {
            "type": "object",
            "description": "Contains the schema id of a custom event. **Required** for the custom event option in `event`.",
            "properties": {
              "schema_id": {
                "type": "string",
                "description": "Contains a unique identifier of a custom event schema. Assigned by the Voucherify API."
              }
            }
          },
          "segment": {
            "type": "object",
            "description": "Contains the id of a customer segment. **Required** for the `customer.segment.entered` option in `event`.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API."
              }
            }
          },
          "event": {
            "type": "string",
            "enum": [
              "order.paid",
              "customer.segment.entered",
              "custom_event_defined_in_EVENT_SCHEMA"
            ],
            "description": "Defines the event which triggers the earning rule to add points to a loyalty card.  \n\n- `order.paid` an event defined by the Voucherify API corresponding to an order status `PAID`. Read more here.  \n- `customer.segment.entered` an event defined by the Voucherify API corresponding to a customer entering a pre-defined customer segment. Read more here.  \n- `custom_event_name` the name of a custom event defined in the Dashboard &rarr; **Project Settings** &rarr; **EVENT SCHEMA** &rarr; **Add event definition**. Read more on defining custom events. "
          },
          "source": {
            "type": "object",
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "example": "Order Paid - You will get 100 points",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard."
              },
              "object_id": {
                "type": "string",
                "example": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                "description": "A unique campaign identifier assigned by the Voucherify API."
              },
              "object_type": {
                "type": "string",
                "default": "campaign",
                "description": "Defines the object associated with the earning rule. Defaults to `campaign`."
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the `start_date` and `expiration_date` of the campaign or the earning rule's own `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* earning rule\n- `false` indicates an *inactive* earning rule"
          },
          "start_date": {
            "type": "string",
            "example": "2022-02-02T13:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp in ISO 8601 format. Earning rule is *inactive before* this date. If you don't define the start date for an earning rule, it'll inherit the campaign start date by default."
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-03T14:30:00.000Z",
            "description": "Expiration timestamp in ISO 8601 format.  Earning rule is *inactive after* this date.If you don't define the expiration date for an earning rule, it'll inherit the campaign expiration date by default."
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the earning rule is valid. For example, valid for 1 hour every other day.`start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Defines the amount of time an earning rule will be active in ISO 8601 format. For example, an earning rule with a `duration` of `PT1H` will be valid for a duration of one hour.",
                "example": "PT1H"
              },
              "interval": {
                "type": "string",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, an earning rule with an `interval` of `P2D` will be valid every other day.",
                "example": "P2D"
              }
            }
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the earning rule is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "object": {
            "type": "string",
            "default": "earning_rule",
            "description": "The type of object represented by JSON. Default is `earning_rule`."
          },
          "automation_id": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "event",
          "active",
          "object"
        ],
        "examples": [
          {
            "id": "ern_abvbD0d7Wv4hgr3fTElLb38G",
            "created_at": "2022-02-07T08:19:41.810Z",
            "updated_at": null,
            "validation_rule_id": null,
            "loyalty": {
              "points": 2,
              "type": "FIXED"
            },
            "custom_event": {
              "schema_id": "ms_7JRYC8jXbezBV8AvGYGA0b5R"
            },
            "event": "saw_on_facebook",
            "source": {
              "banner": "Saw on Facebook Timeframe",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-07T08:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "object": "earning_rule",
            "automation_id": "auto_WTxNMXGJMS5ZdU9oZip3AzuA"
          },
          {
            "id": "ern_taClaOIiaGNdmdby8xS0lCcy",
            "created_at": "2022-02-04T13:27:50.665Z",
            "updated_at": "2022-02-07T08:19:44.198Z",
            "validation_rule_id": null,
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "event": "order.paid",
            "source": {
              "banner": "Order paid 1000 points",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "validity_day_of_week": [
              4
            ],
            "object": "earning_rule",
            "automation_id": "auto_RjBuwpeFQZ7TyQ5LP2LFVZYG"
          },
          {
            "id": "ern_3HlFKLMNIfBme9lcHwnMwXON",
            "created_at": "2022-02-04T13:02:52.937Z",
            "updated_at": "2022-02-07T08:19:43.291Z",
            "validation_rule_id": null,
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "segment": {
              "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
            },
            "event": "customer.segment.entered",
            "source": {
              "banner": "Entered segment 100 points.",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "validity_day_of_week": [
              1,
              2,
              3,
              4,
              5
            ],
            "object": "earning_rule",
            "automation_id": "auto_39wqQSScJJbvpzAF611jnrh9"
          }
        ]
      },
      "1_req_vouchers_metadata_async": {
        "title": "req_vouchers_metadata_async",
        "type": "object",
        "description": "Request body schema for vouchers/metadata/async.",
        "properties": {
          "codes": {
            "type": "array",
            "description": "A string array of voucher codes.",
            "items": {
              "type": "string"
            },
            "example": [
              "PROMO-CODE810",
              "PROMO-CODE726"
            ]
          },
          "metadata": {
            "type": "object",
            "description": "A set of custom key/value pairs.",
            "example": {
              "lang": "en",
              "authorized_internally": true
            }
          }
        },
        "required": [
          "codes",
          "metadata"
        ],
        "x-examples": {
          "example-1": {
            "$ref": "#/components/examples/req_vouchers_metadata_1"
          },
          "example-2": {
            "$ref": "#/components/examples/req_vouchers_metadata_2"
          }
        }
      },
      "req_loyalties_campaignId_earning-rules": {
        "description": "This data model represents the request body for the `/loyalties/{campaignId}/earning-rules` endpoint.",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "ern_P6MWOFGsv63sbTaTZBp0IHGK",
            "created_at": "2022-02-02T13:18:32.557Z",
            "updated_at": "2022-02-03T13:09:27.206Z",
            "validation_rule_id": "val_6o0qdvlbh1mt",
            "loyalty": {
              "points": 1000,
              "type": "FIXED"
            },
            "event": "order.paid",
            "source": {
              "banner": "Order paid 1000 points",
              "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
              "object_type": "campaign"
            },
            "active": true,
            "start_date": "2022-02-02T13:00:00.000Z",
            "expiration_date": "2022-03-03T14:30:00.000Z",
            "validity_timeframe": {
              "duration": "PT1H",
              "interval": "P1D"
            },
            "object": "earning_rule",
            "automation_id": "auto_RVgObANuPToNla8LuD5aT3Zb"
          }
        },
        "title": "RequestBodyLoyaltiesCampaignIDEarningRules",
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "order.paid",
              "customer.segment.entered",
              "custom_event_defined_in_EVENT_SCHEMA"
            ],
            "description": "Defines the event which triggers the earning rule to add points to a loyalty card.  \n\n- `order.paid` an event defined by the Voucherify API corresponding to an order status `PAID`. Read more here.  \n- `customer.segment.entered` an event defined by the Voucherify API corresponding to a customer entering a pre-defined customer segment. Read more here.  \n- `custom_event_name` the name of a custom event defined in the Dashboard &rarr; **Project Settings** &rarr; **EVENT SCHEMA** &rarr; **Add event definition**. Read more on defining custom events. "
          },
          "validation_rule_id": {
            "type": "string",
            "example": "val_248vs7tUjlIE",
            "description": "A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.",
            "default": null
          },
          "loyalty": {
            "description": "An object that defines the number of points that will be added to a loyalty card and how the points will be added.\n\n- `FIXED` adds a fixed number of `points`\n- `PROPORTIONAL` adds points proportionally based on a pre-defined ratio",
            "oneOf": [
              {
                "description": "Fixed. Applicable to events `order.paid`,  `customer.segment.entered`, and `custom_event`.",
                "properties": {
                  "points": {
                    "type": "integer",
                    "description": "The number of points to be added to the loyalty card.",
                    "example": 1000
                  },
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card. `FIXED` adds a fixed number of `points`.",
                    "default": "FIXED"
                  }
                },
                "required": [
                  "points",
                  "type"
                ]
              },
              {
                "description": "Proportional. Applicable to only `order.paid`.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Defines how the points will be added to the loyalty card.`PROPORTIONAL` adds points based on a pre-defined ratio",
                    "default": "PROPORTIONAL"
                  },
                  "order": {
                    "type": "object",
                    "description": "Defines proportion for calculating how many points to add to a loyalty card. The ratio is based on the order amount. For `every` dollar spent, the customer will get this many `points`.  \n",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "type": "object",
                        "description": "Defines the ratio based on the order amount.",
                        "required": [
                          "every",
                          "points"
                        ],
                        "properties": {
                          "every": {
                            "type": "integer",
                            "description": "Order amount. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000."
                          },
                          "points": {
                            "type": "integer",
                            "description": "Number of points awarded."
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "order"
                ]
              }
            ],
            "type": "object"
          },
          "source": {
            "type": "object",
            "description": "Contains the custom earning rule name and parent campaign.",
            "properties": {
              "banner": {
                "type": "string",
                "example": "Order Paid - You will get 100 points",
                "description": "Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard."
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "A flag to toggle the earning rule on or off. You can disable an earning rule even though it's within the active period defined by the `start_date` and `expiration_date` of the campaign or the earning rule's own `start_date` and `expiration_date`.  \n\n- `true` indicates an *active* earning rule\n- `false` indicates an *inactive* earning rule"
          },
          "start_date": {
            "type": "string",
            "example": "2022-02-02T13:00:00.000Z",
            "format": "date-time",
            "description": "Activation timestamp in ISO 8601 format. Earning rule is *inactive before* this date. If you don't define the start date for an earning rule, it'll inherit the campaign start date by default.",
            "default": null
          },
          "expiration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2022-03-03T14:30:00.000Z",
            "description": "Expiration timestamp in ISO 8601 format.  Earning rule is *inactive after* this date.If you don't define the expiration date for an earning rule, it'll inherit the campaign expiration date by default.",
            "default": null
          },
          "validity_timeframe": {
            "type": "object",
            "description": "Set recurrent time periods when the earning rule is valid. For example, valid for 1 hour every other day. `start_date` **required** when including the `validity_timeframe`.",
            "properties": {
              "duration": {
                "type": "string",
                "description": "Defines the amount of time an earning rule will be active in ISO 8601 format. For example, an earning rule with a `duration` of `PT1H` will be valid for a duration of one hour.",
                "example": "PT1H"
              },
              "interval": {
                "type": "string",
                "description": "Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, an earning rule with an `interval` of `P2D` will be valid every other day.",
                "example": "P2D"
              }
            },
            "required": [
              "duration",
              "interval"
            ]
          },
          "validity_day_of_week": {
            "type": "array",
            "description": "Integer array corresponding to the particular days of the week in which the earning rule is valid.\n\n- `0`  Sunday  \n- `1`  Monday  \n- `2`  Tuesday  \n- `3`  Wednesday  \n- `4`  Thursday  \n- `5`  Friday  \n- `6`  Saturday  ",
            "items": {
              "type": "integer",
              "example": "[ 1, 2 ]"
            }
          },
          "custom_event": {
            "type": "object",
            "description": "Contains the schema id of a custom event. **Required** for the custom event option in `event`.",
            "default": null,
            "properties": {
              "schema_id": {
                "type": "string",
                "description": "Contains a unique identifier of a custom event schema. Assigned by the Voucherify API."
              }
            },
            "required": [
              "schema_id"
            ]
          },
          "segment": {
            "type": "object",
            "description": "Contains the id of a customer segment. **Required** for the `customer.segment.entered` option in `event`.",
            "default": null,
            "properties": {
              "id": {
                "type": "string",
                "description": "Contains a unique identifier of a customer segment. Assigned by the Voucherify API."
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "required": [
          "event",
          "loyalty"
        ]
      },
      "1_res_async_actions": {
        "type": "object",
        "title": "async_actions",
        "description": "Response to bulk update for voucher metadata.",
        "additionalProperties": false,
        "properties": {
          "async_action_id": {
            "type": "string",
            "example": "aa_0a875d56c805df6601"
          }
        }
      },
      "error": {
        "title": "error",
        "type": "object",
        "properties": {},
        "discriminator": {
          "propertyName": "key",
          "mapping": {
            "not_enough_codes": "not_enough_codes"
          }
        },
        "description": "Short error response",
        "examples": []
      },
      "e_400_missing_param": {
        "description": "Error: Bad Request &rarr; Missing Parameters",
        "type": "object",
        "x-examples": {
          "example-1": {
            "code": 400,
            "key": "missing_param",
            "message": "Missing required parameter",
            "details": "Parameter 'custom_event.schema_id' is required",
            "request_id": "v-0a96c19b1a41c03999"
          }
        },
        "title": "missing_param",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "missing_param",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Missing required parameter",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Parameter 'custom_event.schema_id' is required",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a96c19b1a41c03999"
          }
        }
      },
      "e_404_not_found": {
        "description": "Error: Not Found",
        "type": "object",
        "x-examples": {
          "example-1": {
            "code": 404,
            "key": "not_found",
            "message": "Resource not found",
            "details": "Cannot find voucher with id IrKORhS",
            "request_id": "v-0a96cd820301c0483a",
            "resource_id": "IrKORhS",
            "resource_type": "voucher"
          }
        },
        "title": "not_found",
        "properties": {
          "code": {
            "type": "integer",
            "default": 404,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "not_found",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Resource not found",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Cannot find voucher with id IrKORhS",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a96cd820301c0483a"
          },
          "resource_id": {
            "type": "string",
            "example": "IrKORhS"
          },
          "resource_type": {
            "type": "string",
            "example": "voucher"
          }
        }
      },
      "e_400_invalid_payload": {
        "title": "invalid_payload",
        "type": "object",
        "description": "Error: Bad Request &rarr; Invalid Payload",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "not_enough_codes",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Invalid payload",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Property should have required property 'metadata'",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a884c6be8c3756f42"
          }
        }
      },
      "e_400_not_enough_codes": {
        "title": "not_enough_codes",
        "type": "object",
        "description": "Error: Bad Request &rarr; Not enough codes",
        "properties": {
          "code": {
            "type": "integer",
            "default": 400,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "not_enough_codes",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Not enough codes",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Specify at least 1 code in codes.",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0a885062c80375740f"
          }
        }
      },
      "e_409_duplicate_found": {
        "title": "not_enough_codes",
        "type": "object",
        "description": "Error: Conflict &rarr; Duplicated resource found",
        "properties": {
          "code": {
            "type": "integer",
            "default": 409,
            "description": "Error's HTTP status code."
          },
          "key": {
            "type": "string",
            "default": "duplicate_found",
            "description": "Short string describing the kind of error which occurred."
          },
          "message": {
            "type": "string",
            "default": "Duplicated resource found",
            "description": "A human-readable message providing a short description about the error."
          },
          "details": {
            "type": "string",
            "example": "Duplicated voucher exists with id NEW-WELCOME-COUPON",
            "description": "A human-readable message providing more details about the error."
          },
          "request_id": {
            "type": "string",
            "example": "v-0aa36e570e44cb3bdd"
          },
          "resource_id": {
            "type": "string",
            "example": "NEW-WELCOME-COUPON"
          },
          "resource_type": {
            "type": "string",
            "example": "voucher"
          }
        }
      },
      "1_obj_voucher_object_discount_amount": {
        "title": "Amount discount type",
        "type": "object",
        "description": "Amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount discount"
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_percentage": {
        "title": "Percentage discount type",
        "type": "object",
        "description": "Percentage discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "PERCENT",
            "description": "Applies a percentage discount"
          },
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount"
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_fixed": {
        "title": "Fixed discount type",
        "description": "Fixed discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Sets a fixed total on cart or item(s) and then calculates the discount to apply"
          },
          "fixed_amount": {
            "type": "integer",
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": 1000
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        }
      },
      "1_obj_voucher_object_discount_unit_one": {
        "title": "Unit discount type, single item",
        "type": "object",
        "description": "Single item type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "description": "Number of units to subtract from the subtotal",
            "example": 1,
            "format": "float"
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_NEW_ITEMS",
              "ADD_MISSING_ITEMS"
            ],
            "default": "ADD_MISSING_ITEMS",
            "description": "Defines how the unit is added to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_unit_multiple": {
        "title": "Unite discount type, multiple items",
        "type": "object",
        "description": "Multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        }
      },
      "1_obj_voucher_object_discount_shipping": {
        "title": "Shipping discount type",
        "description": "Shipping discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_voucher_object_discount_amount_POST": {
        "title": "Create amount discount type",
        "type": "object",
        "description": "Create amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount discount"
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_percentage_POST": {
        "title": "Create percentage discount type",
        "type": "object",
        "description": "Create percentage discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "PERCENT",
            "description": "Applies a percentage discount"
          },
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount"
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_fixed_POST": {
        "title": "Create fixed discount type",
        "description": "Create fixed discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Sets a fixed total on cart or item(s) and then calculates the discount to apply"
          },
          "fixed_amount": {
            "type": "integer",
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": 1000
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        }
      },
      "1_obj_voucher_object_discount_unit_one_POST": {
        "title": "Update unit discount type, single item",
        "type": "object",
        "description": "Define single item type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "description": "Number of units to subtract from the subtotal",
            "example": 1,
            "format": "float"
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_NEW_ITEMS",
              "ADD_MISSING_ITEMS"
            ],
            "default": "ADD_MISSING_ITEMS",
            "description": "Defines how the unit is added to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_unit_multiple_POST": {
        "title": "Create unite discount type, multiple items",
        "type": "object",
        "description": "Define multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        }
      },
      "1_obj_voucher_object_discount_shipping_POST": {
        "title": "Create shipping discount type",
        "description": "Create shipping discount type.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "UNIT",
            "description": "Applies a full value discount to item(s)"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_voucher_object_discount_amount_PUT": {
        "title": "Update amount discount type",
        "type": "object",
        "description": "Update amount discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "AMOUNT",
            "description": "Applies an amount type discount. **Requires** child attribute\n `type`=`AMOUNT` when modifying this discount."
          },
          "amount_off": {
            "type": "integer",
            "example": 100,
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000."
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS",
              "APPLY_TO_ITEMS_PROPORTIONALLY",
              "APPLY_TO_ITEMS_PROPORTIONALLY_BY_QUANTITY"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_percentage_PUT": {
        "title": "Update percentage discount type",
        "type": "object",
        "description": "Update percentage discount type.",
        "properties": {
          "percent_off": {
            "type": "integer",
            "example": 10,
            "description": "Percent taken off the subtotal amount"
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "Defines how the discount is applied to the customer's order"
          }
        }
      },
      "1_obj_voucher_object_discount_fixed_PUT": {
        "title": "Update fixed discount type",
        "type": "object",
        "description": "Update fixed discount type.",
        "properties": {
          "type": {
            "type": "string",
            "default": "FIXED",
            "description": "Applies a fixed type discount. **Requires** child attribute\n `type`=`FIXED` when modifying this discount."
          },
          "fixed_amount": {
            "description": "Amount taken off the subtotal of a price. Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 discount is written as 1000.",
            "example": "1000",
            "type": "integer"
          },
          "effect": {
            "type": "string",
            "enum": [
              "APPLY_TO_ORDER",
              "APPLY_TO_ITEMS"
            ],
            "description": "- **APPLY\\_TO\\_ORDER**: Set fixed total on the whole cart. Discount will be calculated dynamically, based on fixed amount value. For example, if fixed amount is set to equal $10 and order amount equals $25, then the calculated discount will be $15.  \n- **APPLY\\_TO\\_ITEMS**: This type of deal applies a new price for line items. \n  Default rules:\n   - During redemption, prices will change only if the new one is lower than the old one.\n    - If a product price in the collection and the new product price you have set up differs, then the new product price will be passed during the redemption.\n    - When a product is in two collections, we always change the price to the lowest.\n    - The new price for products with several SKUs will force the price change for SKUs if their price is higher than the new price."
          }
        }
      },
      "1_obj_voucher_object_discount_unit_one_PUT": {
        "title": "Update unit discount type, single item",
        "type": "object",
        "description": "Define single item type.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s). **Requires** child attribute `type`=`UNIT` when modifying this discount.",
            "default": "UNIT"
          },
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Number of units to subtract from the subtotal",
            "example": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
            "example": "prod_0a9f9aeddb019a42db"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS",
              "ADD_NEW_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      },
      "1_obj_voucher_object_discount_unit_multiple_PUT": {
        "title": "Update unite discount type, multiple items",
        "type": "object",
        "description": "Define multiple item types.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Applies a full value discount to item(s)",
            "default": "UNIT"
          },
          "effect": {
            "type": "string",
            "default": "ADD_MANY_ITEMS",
            "description": "Defines the effect for adding multiple item types."
          },
          "units": {
            "type": "array",
            "description": "Array of objects defining items to be offered for free. Each item type can have a different discount effect assigned.",
            "items": {
              "type": "object",
              "description": "Object defining a unit discount.",
              "properties": {
                "unit_off": {
                  "type": "integer",
                  "description": "Number of units to subtract from the subtotal",
                  "example": 1
                },
                "unit_type": {
                  "type": "string",
                  "description": "The product deemed as free, chosen from product  inventory (e.g. time, items)",
                  "example": "prod_0a9f9aeddb019a42db"
                },
                "effect": {
                  "type": "string",
                  "enum": [
                    "ADD_NEW_ITEMS",
                    "ADD_MISSING_ITEMS"
                  ],
                  "description": "Defines how the unit is added to the customer's order"
                }
              }
            }
          }
        }
      },
      "1_obj_voucher_object_discount_shipping_PUT": {
        "title": "Update shipping discount type",
        "description": "Update shipping discount type.",
        "type": "object",
        "properties": {
          "unit_off": {
            "type": "number",
            "format": "float",
            "description": "Subtracts 1 shipping item from the subtotal",
            "default": 1
          },
          "unit_type": {
            "type": "string",
            "description": "The shipping product deemed as free",
            "default": "prod_5h1pp1ng"
          },
          "effect": {
            "type": "string",
            "enum": [
              "ADD_MISSING_ITEMS"
            ],
            "description": "Defines how the unit is added to the customer's order",
            "default": "ADD_MISSING_ITEMS"
          }
        }
      }
    },
    "examples": {
      "req_vouchers_metadata_1_test": {
        "summary": "Request Body",
        "description": "Request body to update metadata in bulk *asynchronously*.",
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_2_test": {
        "summary": "Request Body",
        "description": "Request body to update metadata in bulk *asynchronously*.",
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726",
            "PROMO-CODE888"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_1": {
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      },
      "req_vouchers_metadata_2": {
        "value": {
          "codes": [
            "PROMO-CODE810",
            "PROMO-CODE726",
            "PROMO-CODE888"
          ],
          "metadata": {
            "lang": "en",
            "authorized_internally": true
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "VOUCHERS API",
      "description": "Manage discount and gift card vouchers."
    },
    {
      "name": "CAMPAIGNS API",
      "description": "Group vouchers or promotion tiers of a specific type."
    },
    {
      "name": "PROMOTIONS API",
      "description": "Manage promotions."
    },
    {
      "name": "REWARDS API",
      "description": "Manage rewards."
    },
    {
      "name": "DISTRIBUTIONS API",
      "description": "Manage distributions."
    },
    {
      "name": "VALIDATIONS API",
      "description": "Validate vouchers and promotions."
    },
    {
      "name": "REDEMPTIONS API",
      "description": "Manage redemptions."
    },
    {
      "name": "STACKABLE DISCOUNTS API",
      "description": "Manage multiple discounts in one request."
    },
    {
      "name": "LOYALTIES API",
      "description": "Manage loyalty campaign."
    },
    {
      "name": "CUSTOMERS API",
      "description": "Manage customers."
    },
    {
      "name": "ORDERS API",
      "description": "Manage orders."
    },
    {
      "name": "PRODUCTS API",
      "description": "Manage products."
    },
    {
      "name": "PRODUCT COLLECTIONS API",
      "description": "Group products."
    },
    {
      "name": "VALIDATION RULES API",
      "description": "Configure validation rules."
    },
    {
      "name": "SEGMENTS API",
      "description": "Manage customer segments."
    },
    {
      "name": "EVENTS API",
      "description": "Track custom and internal events."
    },
    {
      "name": "CONSENTS API",
      "description": "List marketing opt-in consents."
    },
    {
      "name": "ASYNC ACTIONS API",
      "description": "Track asynchronous operations scheduled in Projects."
    }
  ],
  "paths": {
    "/vouchers/{code}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "get": {
        "summary": "Get Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "get-vouchers-code",
        "description": "Retrieves the voucher with the given `code`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false,
          "description": "Not required."
        },
        "responses": {
          "200": {
            "description": "Returns a voucher object if a valid identifier was provided. \n\nAdditionally, the response returns validation rules related to the voucher object. They can be inherited from a campaign.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. When requesting the code of a voucher that has been deleted, the resource will not be returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_404_not_found"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "put-vouchers-code",
        "description": "Updates the specified voucher by setting the values of the parameters passed in the request body. Any parameters not provided in the payload will be left unchanged.\n\nYou can modify the following fields:  \n\n- `category`\n- `start_date`\n- `expiration_date`\n- `active`\n- `additional_info`\n- `metadata`\n- `validity_day_of_week`\n- `validity_timeframe`\n- `gift` &rarr; `amount` + `effect`\n- `loyalty_card` &rarr; `points`\n- `discount` &darr;\n  - Amount type &rarr; `amount_off` + `effect` + **requires** `type`=`AMOUNT` \n  - Percent type &rarr; `percent_off` + `effect`\n  - Fixed type &rarr; `fixed_amount` + `effect` + **requires** `type`=`FIXED` \n  - Unit type &darr; \n    - One item &rarr; `unit_off` + `unit_type` + `effect` + **requires** `type`=`UNIT`\n    - Multiple item types &rarr; `unit_off` + `unit_type` + `effect` + **requires** higher level `type`=`UNIT` & `effect`=`ADD_MANY_ITEMS` (HERE ONLY TYPE=UNIT IS REQUIRED - IF I DON'T PASS THE OTHER ATTRIBUTES, IT DELETES THEM FROM THE VOUCHER OBJECT RESPONSE)\n  - ~~Shipping type &rarr; `unit_off` + `unit_type` + `effect` + **requires** `type`=`UNIT`~~ \n\nFields other than the ones listed above won't be modified. Even if provided, they will be silently skipped.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_code_PUT"
              },
              "examples": {
                "example-1-Update-Percentage-Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "percent_off": 20,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z",
                    "expiration_date": "2023-12-31T23:59:59Z",
                    "active": true,
                    "additional_info": "This voucher is being activated.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ],
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P3D"
                    }
                  }
                },
                "example-2-Update-Gift-Card": {
                  "value": {
                    "category": "Existing Customers",
                    "gift": {
                      "amount": 20000,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z",
                    "active": false,
                    "additional_info": "This gift card is disabled.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    }
                  }
                },
                "example-3-Update-Loyalty-Card": {
                  "value": {
                    "category": "Existing Customers",
                    "loyalty_card": {
                      "points": 20000
                    },
                    "active": false,
                    "additional_info": "This loyalty card is being deactivated and points updated.",
                    "metadata": {
                      "test": false,
                      "locale": "de-en-pl"
                    }
                  }
                },
                "example-4-Update-Amount-Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "amount_off": 2000,
                      "type": "AMOUNT",
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z"
                  }
                },
                "example-5-Update-Fixed-Discount": {
                  "value": {
                    "category": "Existing Customers",
                    "discount": {
                      "type": "FIXED",
                      "fixed_amount": 2000,
                      "effect": "APPLY_TO_ITEMS"
                    },
                    "start_date": "2021-01-01T00:00:00Z"
                  }
                },
                "example-1-Update-Unit-Discount-Multiple-Items": {
                  "value": {
                    "discount": {
                      "type": "UNIT",
                      "effect": "ADD_MANY_ITEMS",
                      "units": [
                        {
                          "unit_off": 2,
                          "unit_type": "prod_0a9f9ab4ab019a42d5",
                          "effect": "ADD_MISSING_ITEMS"
                        },
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9aeddb019a42db",
                          "effect": "ADD_MISSING_ITEMS"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true,
          "description": "Specify the parameters to be updated."
        },
        "responses": {
          "200": {
            "description": "Returns the voucher object if the update succeeded. Returns an error if update parameters are invalid (e.g. specifying an invalid gift amount).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                "examples": {
                  "example-1-Response-Percentage-Discount-Voucher": {
                    "value": {
                      "id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                      "code": "welcome",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 20,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": "2023-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P3D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ],
                      "active": true,
                      "additional_info": "This voucher is being activated.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+by33CNzWu6xXjCrLKRr1+H9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC+4/hCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2Bby33CNzWu6xXjCrLKRr1%2BH9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC%2B4%2FhCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz/ZTnXUFeHeehtK4L6RTvNgVeSR+McTZR4DYNLEGydZ+Fo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO/OEAjvVoiEuaHA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz%2FZTnXUFeHeehtK4L6RTvNgVeSR%2BMcTZR4DYNLEGydZ%2BFo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO%2FOEAjvVoiEuaHA%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:05:34.668Z",
                      "updated_at": "2022-02-17T11:03:05.878Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_74F7QZoYbUoljwQO",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T09:05:34.642Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcome/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcome/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-2-Response-Gift-Card": {
                    "value": {
                      "id": "v_7xaObxyK5LG62Rp0Xqpez7lqiBFL62pL",
                      "code": "welcomegiftcard",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 20000,
                        "balance": 20000,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This gift card is disabled.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+mTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M/OBPJm4PV8bTtBgR+oXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj+63mS9QdHvvILEAulBuZZQ+hZ0HmFXjDl4Quz/kUqGwffKGTziQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BmTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M%2FOBPJm4PV8bTtBgR%2BoXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj%2B63mS9QdHvvILEAulBuZZQ%2BhZ0HmFXjDl4Quz%2FkUqGwffKGTziQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN+8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg+6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO/71RdMw==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN%2B8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg%2B6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO%2F71RdMw%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:09:49.665Z",
                      "updated_at": "2022-02-17T11:11:48.071Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomegiftcard/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomegiftcard/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-3-Response-Loyalty-Card": {
                    "value": {
                      "id": "v_l84t3fy3keMUiOeaHbN1cbTdW8O5eUlm",
                      "code": "welcomeloyalty",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "Existing Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 20000,
                        "balance": 20000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This loyalty card is being deactivated and points updated.",
                      "metadata": {
                        "test": false,
                        "locale": "de-en-pl"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX186PCWooyrNsjfI+nb+Y9ziUZ1k7xe+nJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186PCWooyrNsjfI%2Bnb%2BY9ziUZ1k7xe%2BnJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/FWUg0RbOU7R7Zqg7/8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo/1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FFWUg0RbOU7R7Zqg7%2F8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo%2F1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:12:01.428Z",
                      "updated_at": "2022-02-17T11:20:12.447Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomeloyalty/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomeloyalty/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-4-Response-Amount-Discount": {
                    "value": {
                      "id": "v_jMIjKfG2oJ7vCwIPhsLsbXYGTdPLlbJd",
                      "code": "WelcomeDiscountAmount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "AMOUNT",
                        "amount_off": 2000,
                        "effect": "APPLY_TO_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+TcEE9sZP6aMfAW3NZv9GWlCnUNn+SiK4FIbMRWWjN5hzTR7Yc/73yfldUb6SMgIvUNL551Nz/nPjrMY2iauia1MSWX21MItsSPfy8qccrC+WAlvpGK/1ZklnxYaeKqxTqwSXl7ppSlgcuEejbFiaqEDajvYUZsF4=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BTcEE9sZP6aMfAW3NZv9GWlCnUNn%2BSiK4FIbMRWWjN5hzTR7Yc%2F73yfldUb6SMgIvUNL551Nz%2FnPjrMY2iauia1MSWX21MItsSPfy8qccrC%2BWAlvpGK%2F1ZklnxYaeKqxTqwSXl7ppSlgcuEejbFiaqEDajvYUZsF4%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/AhpZMq/h+Phi8JZF9m4qL8/U/Z5AST82jaAOnnhdHdbaGjB1+/0VFIdGBA8w2+3JX5qd61Dfk6yfiLCraVw7lYjQddCHF5SKtJs4hqsLHZevQTCzpZkeIHC3ThsG/fLZTsaNn8tjewd/W4qn/2Cc5NgTdv7fqui4=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FAhpZMq%2Fh%2BPhi8JZF9m4qL8%2FU%2FZ5AST82jaAOnnhdHdbaGjB1%2B%2F0VFIdGBA8w2%2B3JX5qd61Dfk6yfiLCraVw7lYjQddCHF5SKtJs4hqsLHZevQTCzpZkeIHC3ThsG%2FfLZTsaNn8tjewd%2FW4qn%2F2Cc5NgTdv7fqui4%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T11:41:05.236Z",
                      "updated_at": "2022-02-17T11:45:29.269Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_tDN7MJNayjrf1wyn",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_jMIjKfG2oJ7vCwIPhsLsbXYGTdPLlbJd",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T11:41:05.210Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/WelcomeDiscountAmount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/WelcomeDiscountAmount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-5-Response-Fixed-Discount": {
                    "value": {
                      "id": "v_B1Pe7QPTjXCHm8IcDkJAQs4g6Zc08UlK",
                      "code": "wou4w1Og",
                      "campaign": "Fixed",
                      "campaign_id": "camp_2jVA6EKGSAe6scyc3i1q9ROD",
                      "category": "Existing Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "FIXED",
                        "effect": "APPLY_TO_ITEMS",
                        "fixed_amount": 2000
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2021-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": null,
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX18zxYPpRIYeGHCoCAp3ZAPEUM0qacHQIIW/82oGOW24bFMA06kahjkZKVA/1mqqJsqh83C29Jhdz82KrRsM2zl9nzplu5hrmn7m0twnf5NQaTTcovEvnBV8Kej9tGhzc/dPwqE+xEKuDg==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX18zxYPpRIYeGHCoCAp3ZAPEUM0qacHQIIW%2F82oGOW24bFMA06kahjkZKVA%2F1mqqJsqh83C29Jhdz82KrRsM2zl9nzplu5hrmn7m0twnf5NQaTTcovEvnBV8Kej9tGhzc%2FdPwqE%2BxEKuDg%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX18tsK1tz0X2IQWbFHCY4wZBDjoysFt1fBlWo/9bm/HNTci1Q3bSFuIzqIQqlU2TkSacFBgOWGuVG08XboZsqNSXXsAgST9tyoxpaOJ22B2EwWspdvuwJqvZh4PpEyh3BBDS7eOWsr3+Sw==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX18tsK1tz0X2IQWbFHCY4wZBDjoysFt1fBlWo%2F9bm%2FHNTci1Q3bSFuIzqIQqlU2TkSacFBgOWGuVG08XboZsqNSXXsAgST9tyoxpaOJ22B2EwWspdvuwJqvZh4PpEyh3BBDS7eOWsr3%2BSw%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T11:54:37.766Z",
                      "updated_at": "2022-02-17T12:04:53.346Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 1,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/wou4w1Og/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/wou4w1Og/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-1-Unit-Discount-Multiple-Items": {
                    "value": {
                      "id": "v_cu8nyozvTDA413H17bH5BLha0cjxt7s8",
                      "code": "MultipleUnitTypesUnitDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 2,
                            "unit_type": "prod_0a9f9ab4ab019a42d5",
                            "effect": "ADD_MISSING_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ocJBtZ9NqT97gZ/QTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2/DkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q+3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE/be+o=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BocJBtZ9NqT97gZ%2FQTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2%2FDkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q%2B3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE%2Fbe%2Bo%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+Sly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3+ZMldwBGaTp/fIN9SGBW/NVUtfDOI2sIDLZCBBrdK7WVvtCQQ+1Y+6qClYg/QurJExCFRkDeKpKjDug=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BSly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3%2BZMldwBGaTp%2FfIN9SGBW%2FNVUtfDOI2sIDLZCBBrdK7WVvtCQQ%2B1Y%2B6qClYg%2FQurJExCFRkDeKpKjDug%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:27:45.619Z",
                      "updated_at": "2022-02-18T06:31:08.630Z",
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [],
                        "total": 0
                      },
                      "redemption": {
                        "quantity": 5,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "delete-vouchers-code",
        "description": "Deletes a voucher. This operation cannot be undone. Additionally, this operation immediately removes any redemptions on the voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/force"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {}
            }
          },
          "required": false,
          "description": "Not required."
        }
      },
      "post": {
        "summary": "Create Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Create a standalone voucher. You can choose to create a `GIFT_VOUCHER`, a `DISCOUNT_VOUCHER`, or a `LOYALTY_CARD`. The code path parameter can use all letters of the English alphabet, Arabic numerals, and special characters.  \n\nWhen you create a new voucher, you can specify a type to create it.\nCreating a new voucher will create a new stand alone voucher if no `campaign` name or `campaign_id` is provided. In case of the loyalty card, a campaign name is required.\n\nThis method will return an error when trying to create a voucher that already exists.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_code_POST"
              },
              "examples": {
                "example-1-Create-Percentage-Discount": {
                  "value": {
                    "category": "New Customers",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "percent_off": 10,
                      "type": "PERCENT",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 10
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "validation_rules": [
                      "val_4j7DCRm2IS59"
                    ]
                  }
                },
                "example-2-Create-Gift-Card": {
                  "value": {
                    "category": "New Customers",
                    "type": "GIFT_VOUCHER",
                    "gift": {
                      "amount": 10000,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "active": true,
                    "additional_info": "This gift card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "example-3-Create-Loyalty-Card": {
                  "value": {
                    "category": "New Customers",
                    "campaign": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                    "type": "LOYALTY_CARD",
                    "loyalty_card": {
                      "points": 10000
                    },
                    "additional_info": "This loyalty card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the details of the voucher that you would like to create."
        },
        "responses": {
          "200": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                "examples": {
                  "example-1-Response-Percentage-Discount": {
                    "value": {
                      "id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                      "code": "welcome",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 10,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+by33CNzWu6xXjCrLKRr1+H9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC+4/hCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2Bby33CNzWu6xXjCrLKRr1%2BH9K3I9wOSa7idiHrMYJe0HlrWiy7INhaJf1BnaKJjLKcUC%2B4%2FhCbILtJ9lHXZWhewG5q5rmx29gK0IH2eRauw1qCZKIlXfqeGTG2T5ftPsEl1D4xf8W2MA%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz/ZTnXUFeHeehtK4L6RTvNgVeSR+McTZR4DYNLEGydZ+Fo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO/OEAjvVoiEuaHA==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX19wOdFeXYXZ4Xu22L0Ummk03Urz%2FZTnXUFeHeehtK4L6RTvNgVeSR%2BMcTZR4DYNLEGydZ%2BFo2xEqqM1UWyl8Bx22Pi1CxghADOcy3bAvSca7EEPpvKrCY403UWUDvaO%2FOEAjvVoiEuaHA%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:05:34.668Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_74F7QZoYbUoljwQO",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_MBOEmHelKwvykVZ8JcT4TE5Kla5IMJyc",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T09:05:34.642Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcome/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcome/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-2-Response-Gift-Card": {
                    "value": {
                      "id": "v_7xaObxyK5LG62Rp0Xqpez7lqiBFL62pL",
                      "code": "welcomegiftcard",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 10000,
                        "balance": 10000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This gift card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+mTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M/OBPJm4PV8bTtBgR+oXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj+63mS9QdHvvILEAulBuZZQ+hZ0HmFXjDl4Quz/kUqGwffKGTziQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BmTbI2MdzBdMJ7AsOPKvGGgRB7O4oHZv5qq8I3M%2FOBPJm4PV8bTtBgR%2BoXOU4Jv1ucbIV7yg1mzC86LVFKjO7Ptnj%2B63mS9QdHvvILEAulBuZZQ%2BhZ0HmFXjDl4Quz%2FkUqGwffKGTziQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN+8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg+6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO/71RdMw==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX184KgQ11OfpqB4WkJuH9ushSwZb0YrcN%2B8OaGPHxBQMiBr2axwnvQlZYv6YhqWtnc5iHByHrkg%2B6qYHxOLBPRMWCysIhcuUEB57IDhgYUHRPyM2bWjQadVHngGfVGCQ0CUy4PO%2F71RdMw%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:09:49.665Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomegiftcard/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomegiftcard/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-3-Response-Loyalty-Card": {
                    "value": {
                      "id": "v_l84t3fy3keMUiOeaHbN1cbTdW8O5eUlm",
                      "code": "welcomeloyalty",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "New Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 10000,
                        "balance": 10000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This loyalty card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX186PCWooyrNsjfI+nb+Y9ziUZ1k7xe+nJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX186PCWooyrNsjfI%2Bnb%2BY9ziUZ1k7xe%2BnJQ53Ms1ynNJOX6JXC6SwxS1WDhYwAKX5FxaDoKyuPf5MkQrkeB6u5bSx333ldAyLypNnqwBD2N17S64WFnTqV7eXUk3hS30wDYcz0cQAJFDcQ%3D%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/FWUg0RbOU7R7Zqg7/8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo/1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A==",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FFWUg0RbOU7R7Zqg7%2F8Ba6oYuXrmIl7EdXGgaPMPfpePNGRzxBu4LP2dNEUO9h1Sh37MR1PxOoaemPwlgTDo%2F1G8dX1JjSppNoaTHhkzk2w4yutNhP7o8cq3ZBbT3TNMTKb2H3fUMc7A%3D%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T09:12:01.428Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/welcomeloyalty/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/welcomeloyalty/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vouchers/": {
      "post": {
        "summary": "Create Voucher",
        "operationId": "post-vouchers",
        "responses": {
          "200": {
            "description": "Returns a voucher object if the call succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_obj_voucher_object"
                },
                "examples": {
                  "example-1-Response-Percentage-Discount": {
                    "value": {
                      "id": "v_YJYfeKoR0XAGIvaM7k51wTbDjU4WIpC5",
                      "code": "NEW-WELCOME-COUPON",
                      "campaign": "Bug fix",
                      "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "PERCENT",
                        "percent_off": 10,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2016-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX180g6GhUA0kT47tHGvZ5thjCgY5nbsPtiecixkkEznFVg2v3SDG9dpCbXR6BSUdM/d78Wm/zru1ybT4+AQ2X0JnEy86N7TZ/aoezZORjcBRUfyVM/scUUF/vmD4Ezn+Elp2+V9AFcAXN/WthaRMl9e7xvEeIEQ5nao=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX180g6GhUA0kT47tHGvZ5thjCgY5nbsPtiecixkkEznFVg2v3SDG9dpCbXR6BSUdM%2Fd78Wm%2Fzru1ybT4%2BAQ2X0JnEy86N7TZ%2FaoezZORjcBRUfyVM%2FscUUF%2FvmD4Ezn%2BElp2%2BV9AFcAXN%2FWthaRMl9e7xvEeIEQ5nao%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/AynivxYCEIxfTnf3A1lO0xsNihOlbUMo6Y6873LQ2qpmkk90aUFnaFKd7pVumcirRweblzGVSxy24Phhd174VSPaLxxmSKp0FPv0dRos/XWBg8zu0Kta0pA/yvFK3WWGlNoPPPnvEhVWKKzOr09Gj94SMrr+TGlI=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FAynivxYCEIxfTnf3A1lO0xsNihOlbUMo6Y6873LQ2qpmkk90aUFnaFKd7pVumcirRweblzGVSxy24Phhd174VSPaLxxmSKp0FPv0dRos%2FXWBg8zu0Kta0pA%2FyvFK3WWGlNoPPPnvEhVWKKzOr09Gj94SMrr%2BTGlI%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T07:14:40.096Z",
                      "updated_at": null,
                      "validation_rules_assignments": {
                        "object": "list",
                        "data_ref": "data",
                        "data": [
                          {
                            "id": "asgm_COu5PJAsWmAwuCqR",
                            "rule_id": "val_4j7DCRm2IS59",
                            "related_object_id": "v_YJYfeKoR0XAGIvaM7k51wTbDjU4WIpC5",
                            "related_object_type": "voucher",
                            "created_at": "2022-02-17T07:14:40.280Z",
                            "object": "validation_rules_assignment"
                          }
                        ],
                        "total": 1
                      },
                      "redemption": {
                        "quantity": 10,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/NEW-WELCOME-COUPON/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/NEW-WELCOME-COUPON/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-2-Response-Gift-Voucher": {
                    "value": {
                      "id": "v_yAZyBimXtF9yQ2C5BEF9WMhNzOMJNfz6",
                      "code": "New-GIFT-CARD-8tqB6FcyhE0",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "GIFT_VOUCHER",
                      "discount": null,
                      "gift": {
                        "amount": 10000,
                        "balance": 10000,
                        "effect": "APPLY_TO_ORDER"
                      },
                      "loyalty_card": null,
                      "start_date": "2022-01-01T00:00:00.000Z",
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This gift card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+pm0q3U4i/KrjResuZpwDigEa5WcDOlwYS/bj3rsesZXDpJF5MNHMUsKqy0+wn5tY3QbjPGv0dwbqRn/OjrIRgNlP99azD0n0n9C/chiTABp8BxlJmMKKFo5AggBbQu4+Mw8Cv8V3+0Ga7ETzeehS+Yrj6c+3ioxg=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2Bpm0q3U4i%2FKrjResuZpwDigEa5WcDOlwYS%2Fbj3rsesZXDpJF5MNHMUsKqy0%2Bwn5tY3QbjPGv0dwbqRn%2FOjrIRgNlP99azD0n0n9C%2FchiTABp8BxlJmMKKFo5AggBbQu4%2BMw8Cv8V3%2B0Ga7ETzeehS%2BYrj6c%2B3ioxg%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1/UaGX0zV8oXbpYah2G76V1ljYSy6hDSnWAZhpz5v10vRibGaOJUahyLcClMyxAsUhU9WXWi4BUGWIEEu510AxzxyGHOTDTjavJH0Q79PI0ciLHdujNFOgLOXWe9Ffwzj+Kvjmbhb22/SVZd/xzQlUBJcv7XboJYU0=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2FUaGX0zV8oXbpYah2G76V1ljYSy6hDSnWAZhpz5v10vRibGaOJUahyLcClMyxAsUhU9WXWi4BUGWIEEu510AxzxyGHOTDTjavJH0Q79PI0ciLHdujNFOgLOXWe9Ffwzj%2BKvjmbhb22%2FSVZd%2FxzQlUBJcv7XboJYU0%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T07:49:10.834Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_amount": 0,
                        "object": "list",
                        "url": "/v1/vouchers/New-GIFT-CARD-8tqB6FcyhE0/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/New-GIFT-CARD-8tqB6FcyhE0/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-3-Response-Loyalty-Card": {
                    "value": {
                      "id": "v_tVkcOhjHCz9W7q8QnuJnTGPBR2hdaYrC",
                      "code": "New-LOYALTY-CARD-UC1",
                      "campaign": "Loyalty Campaign",
                      "campaign_id": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                      "category": "New Customers",
                      "type": "LOYALTY_CARD",
                      "discount": null,
                      "gift": null,
                      "loyalty_card": {
                        "points": 10000,
                        "balance": 10000
                      },
                      "start_date": null,
                      "expiration_date": null,
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": true,
                      "additional_info": "This loyalty card is enabled immediately upon creation.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+6lGBFlqtS9OoY2wbAsoSupV43qa+g5sGu+R0IDTq2k85LIfbKfV9sDSYv80pP9ucsazJ6qGI9ineqQyhv9VVHdsJ2qGRiuZzpw/vRkSA0a7J9N1MpANgzqpIULZHLjYtrCQ/2el72nZ6Hpr2NkWtk19JTpNwB8tk=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2B6lGBFlqtS9OoY2wbAsoSupV43qa%2Bg5sGu%2BR0IDTq2k85LIfbKfV9sDSYv80pP9ucsazJ6qGI9ineqQyhv9VVHdsJ2qGRiuZzpw%2FvRkSA0a7J9N1MpANgzqpIULZHLjYtrCQ%2F2el72nZ6Hpr2NkWtk19JTpNwB8tk%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX180bvJVsyZvpAqwYXTnm4MvvH4Rur+ZhM+Mbmnva/fgYUcUbOttsFXPY/PMZ9Xi8pomVp26a7amIPguNimD8w4PMZLMavMtH7EtJ4k+0V0Wp7JUkudIKeRw2fDnQ3/0cgqvK6PMReUwFWb5nUT3ABpZDAdaOVoMDhE=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX180bvJVsyZvpAqwYXTnm4MvvH4Rur%2BZhM%2BMbmnva%2FfgYUcUbOttsFXPY%2FPMZ9Xi8pomVp26a7amIPguNimD8w4PMZLMavMtH7EtJ4k%2B0V0Wp7JUkudIKeRw2fDnQ3%2F0cgqvK6PMReUwFWb5nUT3ABpZDAdaOVoMDhE%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-17T08:06:41.091Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": null,
                        "redeemed_quantity": 0,
                        "redeemed_points": 0,
                        "object": "list",
                        "url": "/v1/vouchers/New-LOYALTY-CARD-UC1/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/New-LOYALTY-CARD-UC1/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-4-Response-Unit-Discount-Multiple-Items": {
                    "value": {
                      "id": "v_cu8nyozvTDA413H17bH5BLha0cjxt7s8",
                      "code": "MultipleUnitTypesUnitDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "effect": "ADD_MANY_ITEMS",
                        "units": [
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9ab4ab019a42d5",
                            "effect": "ADD_NEW_ITEMS"
                          },
                          {
                            "unit_off": 1,
                            "unit_type": "prod_0a9f9aeddb019a42db",
                            "effect": "ADD_MISSING_ITEMS"
                          }
                        ]
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": {
                        "interval": "P2D",
                        "duration": "PT1H"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {
                        "test": true,
                        "locale": "de-en"
                      },
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX1+ocJBtZ9NqT97gZ/QTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2/DkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q+3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE/be+o=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX1%2BocJBtZ9NqT97gZ%2FQTfOz54TAoRoKO3tnCYBtHZWMghEHT0b2aFrPSL1lqMyf6fYy6DH2%2FDkH5p5Vd8dOozW1LV6wPVatWpa1lZMeMIB0OcARCW3q%2B3QydoW2KdliLKyksFwumH9C7Fsnj6HTaEbUjSttTZE%2Fbe%2Bo%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+Sly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3+ZMldwBGaTp/fIN9SGBW/NVUtfDOI2sIDLZCBBrdK7WVvtCQQ+1Y+6qClYg/QurJExCFRkDeKpKjDug=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BSly3IYj3EbZFHGGNxV6Ns4j76O8d0kRQe3WriJz5qY6s4GBIwlsdy13AciaQuiVt232HlOlZ4TzGaSSk3%2BZMldwBGaTp%2FfIN9SGBW%2FNVUtfDOI2sIDLZCBBrdK7WVvtCQQ%2B1Y%2B6qClYg%2FQurJExCFRkDeKpKjDug%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:27:45.619Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 5,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/MultipleUnitTypesUnitDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  },
                  "example-5-Response-Unit-Discount-Single-Item": {
                    "value": {
                      "id": "v_NQdraO4fXWYvMMWYL9OY22hRernr553n",
                      "code": "AddMissingItemDiscount",
                      "campaign": null,
                      "campaign_id": null,
                      "category": "New Customers",
                      "type": "DISCOUNT_VOUCHER",
                      "discount": {
                        "type": "UNIT",
                        "unit_off": 1,
                        "unit_type": "prod_0a9f9ab4ab019a42d5",
                        "effect": "ADD_MISSING_ITEMS"
                      },
                      "gift": null,
                      "loyalty_card": null,
                      "start_date": "2020-01-01T00:00:00.000Z",
                      "expiration_date": "2022-12-31T23:59:59.000Z",
                      "validity_timeframe": null,
                      "validity_day_of_week": null,
                      "active": false,
                      "additional_info": "This voucher will remain inactive until enabled.",
                      "metadata": {},
                      "assets": {
                        "qr": {
                          "id": "U2FsdGVkX19Yh7LTNyOVKSXQ+ceTr023saElWAUeucwOgjTH50x1SoSF/PP1aoGBr6sSxHZNZOvBGumWNHjsF85y7cPY7La/4a0d1kWqnAiBWeWnGOgDFeQFqthGswypFOK1jdAzUPqLSbxW3O6q936N6Bsmoz4QHYE//kfWFhs=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/qr/U2FsdGVkX19Yh7LTNyOVKSXQ%2BceTr023saElWAUeucwOgjTH50x1SoSF%2FPP1aoGBr6sSxHZNZOvBGumWNHjsF85y7cPY7La%2F4a0d1kWqnAiBWeWnGOgDFeQFqthGswypFOK1jdAzUPqLSbxW3O6q936N6Bsmoz4QHYE%2F%2FkfWFhs%3D"
                        },
                        "barcode": {
                          "id": "U2FsdGVkX1+RqzgyYsIJzAEBxmQt1OZLu4+PSUDQBldDKK1o5XsEoBSQEMPWHis1wJSg4ZNqJ9ZdJ0Ukc+K6X1fjg0ggDsCdXP2ZxpyGPD8/1ReggJZ/tq823ji7A5pzhG1TljA6+vmISuHvs2wkcum0djN9AWuAlB0F/vbXexo=",
                          "url": "https://dev.dl.voucherify.io/api/v1/assets/barcode/U2FsdGVkX1%2BRqzgyYsIJzAEBxmQt1OZLu4%2BPSUDQBldDKK1o5XsEoBSQEMPWHis1wJSg4ZNqJ9ZdJ0Ukc%2BK6X1fjg0ggDsCdXP2ZxpyGPD8%2F1ReggJZ%2Ftq823ji7A5pzhG1TljA6%2BvmISuHvs2wkcum0djN9AWuAlB0F%2FvbXexo%3D"
                        }
                      },
                      "is_referral_code": false,
                      "created_at": "2022-02-18T06:46:44.536Z",
                      "updated_at": null,
                      "redemption": {
                        "quantity": 3,
                        "redeemed_quantity": 0,
                        "object": "list",
                        "url": "/v1/vouchers/AddMissingItemDiscount/redemptions?page=1&limit=10"
                      },
                      "publish": {
                        "object": "list",
                        "count": 0,
                        "url": "/v1/vouchers/AddMissingItemDiscount/publications?page=1&limit=10"
                      },
                      "object": "voucher"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create a standalone voucher. You can choose to create a `GIFT_VOUCHER`, a `DISCOUNT_VOUCHER`, or a `LOYALTY_CARD`. \n\nWhen you create a new voucher, you can specify a type to create it.\nCreating a new voucher will create a new stand alone voucher if no `campaign` name or `campaign_id` is provided. In case of the loyalty card, a campaign name is required.\n\nYou can optionally use the `code` parameter to define a specific code or the `code_config` parameter to design rules for Voucherify API to create a random code. If neither of the two parameters are passed, then a random code is generated by the Voucherify API.\n\nThis method will return an error when trying to create a voucher that already exists.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers__POST"
              },
              "examples": {
                "example-1-Create-Percentage-Discount": {
                  "value": {
                    "category": "New Customers",
                    "code": "NEW-WELCOME-COUPON",
                    "type": "DISCOUNT_VOUCHER",
                    "campaign_id": "camp_Y6dLsYIZloGqP8izufXY6SSJ",
                    "discount": {
                      "percent_off": 10,
                      "type": "PERCENT",
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2016-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 10
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "validation_rules": [
                      "val_4j7DCRm2IS59"
                    ]
                  }
                },
                "example-2-Create-Gift-Card": {
                  "value": {
                    "category": "New Customers",
                    "type": "GIFT_VOUCHER",
                    "gift": {
                      "amount": 10000,
                      "effect": "APPLY_TO_ORDER"
                    },
                    "start_date": "2022-01-01T00:00:00Z",
                    "active": true,
                    "additional_info": "This gift card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "code_config": {
                      "pattern": "GIFT-CARD-##########",
                      "prefix": "New-",
                      "postfix": "0",
                      "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    }
                  }
                },
                "example-3-Create-Loyalty-Card": {
                  "value": {
                    "category": "New Customers",
                    "campaign": "camp_E87CubZLZ8eoQt3c4kAEZsx0",
                    "type": "LOYALTY_CARD",
                    "loyalty_card": {
                      "points": 10000
                    },
                    "additional_info": "This loyalty card is enabled immediately upon creation.",
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    },
                    "code_config": {
                      "pattern": "LOYALTY-CARD-##",
                      "prefix": "New-",
                      "postfix": "1",
                      "charset": "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    }
                  }
                },
                "example-4-Create-Unit-Discount-Multiple-Items": {
                  "value": {
                    "category": "New Customers",
                    "code": "MultipleUnitTypesUnitDiscount",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "UNIT",
                      "effect": "ADD_MANY_ITEMS",
                      "units": [
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9ab4ab019a42d5",
                          "effect": "ADD_NEW_ITEMS"
                        },
                        {
                          "unit_off": 1,
                          "unit_type": "prod_0a9f9aeddb019a42db",
                          "effect": "ADD_MISSING_ITEMS"
                        }
                      ]
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "validity_timeframe": {
                      "duration": "PT1H",
                      "interval": "P2D"
                    },
                    "validity_day_of_week": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ],
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 5
                    },
                    "metadata": {
                      "test": true,
                      "locale": "de-en"
                    }
                  }
                },
                "example-5-Create-Unit-Discount-Single-Item": {
                  "value": {
                    "category": "New Customers",
                    "code": "AddMissingItemDiscount",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                      "type": "UNIT",
                      "unit_off": 1,
                      "unit_type": "prod_0a9f9ab4ab019a42d5",
                      "effect": "ADD_MISSING_ITEMS"
                    },
                    "start_date": "2020-01-01T00:00:00Z",
                    "expiration_date": "2022-12-31T23:59:59Z",
                    "active": false,
                    "additional_info": "This voucher will remain inactive until enabled.",
                    "redemption": {
                      "quantity": 3
                    }
                  }
                }
              }
            }
          },
          "description": "Specify the details of the voucher that you would like to create."
        },
        "tags": [
          "VOUCHERS API"
        ]
      }
    },
    "/vouchers": {
      "get": {
        "summary": "List Vouchers",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "get-vouchers",
        "description": "Returns a list of your vouchers. The vouchers are returned sorted by creation date, with the most recent vouchers appearing first.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false,
          "description": "Not required."
        },
        "responses": {
          "200": {
            "description": "Returns a dictionary with a data property that contains an array of up to limit vouchers. Each entry in the array is a separate voucher object. If no more vouchers are available, the resulting array will be empty. The result can be narrowed down according to specified (or default) filters."
          }
        }
      }
    },
    "/vouchers/{code}/enable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "post": {
        "summary": "Enable Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code-enable",
        "description": "There are various times when you'll want to manage a voucher's accessibility. This can be done by two API methods for managing the voucher state - *enable* and *disable*.  \n___\nSets voucher state to **active**. The voucher can be redeemed - only if the redemption occurs after the start date and the voucher is not expired.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false,
          "description": "Not required."
        }
      }
    },
    "/vouchers/{code}/disable": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "post": {
        "summary": "Disable Voucher",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code-disable",
        "description": "There are various times when you'll want to manage a voucher's accessibility. This can be done by two API methods for managing the voucher state - *enable* and *disable*.  \n___\nSets voucher state to **inactive**. The voucher cannot be redeemed.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false,
          "description": "Not required."
        }
      }
    },
    "/vouchers/{code}/balance": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        }
      ],
      "post": {
        "summary": "Add Gift Card Balance",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-code-balance",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "description": "Add balance to an existing gift card.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": true
        }
      }
    },
    "/vouchers/import": {
      "post": {
        "summary": "Import Vouchers",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-import",
        "description": "Import standalone vouchers and gift cards into the repository.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": true
        }
      }
    },
    "/vouchers/importCSV": {
      "post": {
        "summary": "Import Vouchers using CSV",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-importCSV",
        "description": "Import standalone vouchers into the repository using a CSV file.\n___\nCurl Example\n```\ncurl -X POST \\\n  https://api.voucherify.io/v1/vouchers/importCSV \\\n  -F file=@/path/to/vouchers.csv \\\n  -H \"X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b\" \\\n  -H \"X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c\"\n```\n\nThe CSV file has to include headers in the first line. All properties that cannot be mapped to standard voucher fields will be added to the metadata object.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/file"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false,
          "description": "Not required.MAY NEED TO UPDATE THE HEADERS - CAN'T GENERATE A -F with the Spotlight Parameters."
        }
      }
    },
    "/vouchers/qualification": {
      "post": {
        "summary": "Examine Qualification",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-qualification",
        "description": "Display vouchers qualified to the given customer and context (e.g., order, loyalty reward). Checks up to 150 standalone vouchers.\n____\n\n**SIMPLIFY** A checking logic won't run among coupons from bulk unique codes campaigns. For campaigns with multiple unique codes, you should run a [dedicated function](ref:create-qualification-request) for searching for qualified campaigns.\n\nAs a sample use case, you can imagine a requirement of displaying below cart the coupons eligible to a customer. The customer can take and apply the proposed voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          },
          {
            "$ref": "#/components/parameters/audienceRulesOnly"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": true
        }
      }
    },
    "/vouchers/bulk/async": {
      "post": {
        "summary": "Update Vouchers in bulk",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-bulk-async",
        "description": "Update up to **100 records** in one request.\nUpserts are not supported.  \n\n**NOTE:** Currently only **metadata** updates are supported.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              },
              "examples": {}
            }
          },
          "required": true
        }
      }
    },
    "/vouchers/metadata/async": {
      "post": {
        "summary": "Update Vouchers' metadata in bulk",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "post-vouchers-metadata-async",
        "description": "Update up to **100 records** in one request.\nUpserts are not supported. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1_res_async_actions"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "async_action_id": "aa_0a875d56c805df6601"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "default",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/e_400_invalid_payload"
                    },
                    {
                      "$ref": "#/components/schemas/e_400_not_enough_codes"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "key"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1_req_vouchers_metadata_async"
              }
            }
          },
          "required": true,
          "description": "Request to update vouchers metadata in bulk."
        }
      }
    },
    "/vouchers/{code}/sessions/{session_key}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/code"
        },
        {
          "$ref": "#/components/parameters/session_key"
        }
      ],
      "delete": {
        "summary": "Release Validation Session",
        "tags": [
          "VOUCHERS API"
        ],
        "operationId": "delete-vouchers-code-sessions-session_key",
        "description": "Manually release a validation session that has been set up for the voucher.",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "required": false,
          "description": "Not required."
        }
      }
    },
    "/loyalties/{campaignId}/earning-rules": {
      "parameters": [
        {
          "$ref": "#/components/parameters/campaignId"
        }
      ],
      "post": {
        "summary": "Create Earning Rules",
        "tags": [
          "LOYALTIES API"
        ],
        "operationId": "post-loyalties-campaignId-earning-rules",
        "description": "Create earning rules for a loyalty campaign.",
        "responses": {
          "200": {
            "description": "Returns an array of earning rule objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/obj_earning_rule_object"
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "id": "ern_IXHyK6CDgfrG1Fr79Bh7PFKd",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid 1000 points",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          4
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_axpvVsodCE2Yi0RZIeH2KsJA"
                      },
                      {
                        "id": "ern_hSlULe1KZhqn7v4bBhOMLAaD",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "type": "PROPORTIONAL",
                          "order": {
                            "amount": {
                              "every": 1,
                              "points": 1
                            }
                          }
                        },
                        "event": "order.paid",
                        "source": {
                          "banner": "Order paid 1 point for 1 dollar.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_91DDzufPFsvAz5wUeHlMjgBe"
                      },
                      {
                        "id": "ern_G1k25SkjhVh7KawNHFbweGEw",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "segment": {
                          "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
                        },
                        "event": "customer.segment.entered",
                        "source": {
                          "banner": "Entered segment 100 points.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_y2WLEn0AsjvVN8ZoNk2Jq2Cj"
                      },
                      {
                        "id": "ern_vMtOopc25BJruc0oP90A5NEC",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "custom_event": {
                          "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                        },
                        "event": "payment_placed",
                        "source": {
                          "banner": "Entered segment 100 points.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "start_date": "2022-02-02T13:00:00.000Z",
                        "expiration_date": "2022-03-03T14:30:00.000Z",
                        "validity_timeframe": {
                          "duration": "PT1H",
                          "interval": "P1D"
                        },
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_lRiGaYlBwsH9o1PczVHIRDoO"
                      },
                      {
                        "id": "ern_0NZaprRK1xeaxVB76CeCEuik",
                        "created_at": "2022-02-07T12:05:40.149Z",
                        "updated_at": null,
                        "loyalty": {
                          "points": 1000,
                          "type": "FIXED"
                        },
                        "custom_event": {
                          "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                        },
                        "event": "payment_placed",
                        "source": {
                          "banner": "Entered segment 100 points.",
                          "object_id": "camp_Pfja7X91b1GoyH5wnpzCwlP3",
                          "object_type": "campaign"
                        },
                        "active": true,
                        "validity_day_of_week": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ],
                        "object": "earning_rule",
                        "automation_id": "auto_Y6ivqDUl7dmYPjW9eWGHcCGI"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "default",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/e_400_missing_param"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/X-App-Id"
          },
          {
            "$ref": "#/components/parameters/X-App-Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/req_loyalties_campaignId_earning-rules"
              },
              "examples": {
                "example-1": {
                  "value": [
                    {
                      "event": "order.paid",
                      "validation_rule_id": "val_248vs7tUjlIE",
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Order Paid - You will get 100 points"
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P2D"
                      },
                      "validity_day_of_week": [
                        "[ 1, 2 ]"
                      ],
                      "custom_event": null,
                      "segment": null
                    }
                  ]
                },
                "example-2": {
                  "value": [
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Order paid 1000 points"
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        4
                      ],
                      "segment": null,
                      "custom_event": null
                    },
                    {
                      "event": "order.paid",
                      "validation_rule_id": null,
                      "loyalty": {
                        "type": "PROPORTIONAL",
                        "order": {
                          "amount": {
                            "every": 1,
                            "points": 1
                          }
                        }
                      },
                      "source": {
                        "banner": "Order paid 1 point for 1 dollar."
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "custom_event": null
                    },
                    {
                      "event": "customer.segment.entered",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Entered segment 100 points."
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "segment": {
                        "id": "seg_WJv55MbzQwnr56ttJ2xUrSgt"
                      },
                      "custom_event": null
                    },
                    {
                      "event": "payment_placed",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Entered segment 100 points."
                      },
                      "active": true,
                      "start_date": "2022-02-02T13:00:00.000Z",
                      "expiration_date": "2022-03-03T14:30:00.000Z",
                      "validity_timeframe": {
                        "duration": "PT1H",
                        "interval": "P1D"
                      },
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "custom_event": {
                        "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                      }
                    },
                    {
                      "event": "payment_placed",
                      "validation_rule_id": null,
                      "loyalty": {
                        "points": 1000,
                        "type": "FIXED"
                      },
                      "source": {
                        "banner": "Entered segment 100 points."
                      },
                      "active": true,
                      "start_date": null,
                      "expiration_date": null,
                      "validity_day_of_week": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "custom_event": {
                        "schema_id": "ms_fi47Dcu5T0m3v3nT5ch3ma"
                      }
                    }
                  ]
                }
              }
            }
          },
          "description": "Customize the request body based on the type of earning rules you would like to create. The request body is an array of objects. The required minimum properties to include in the payload for each object are `event` and `loyalty`. Additionally, if you choose to add a `validity_timeframe`, you must include a `start_date`. Furthermore, an earning rule `event` type:  \n\n- `customer.segment.entered` requires a `segment` object\n- a custom event requires a `custom_event` object"
        }
      }
    }
  }
}